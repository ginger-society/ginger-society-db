# Generated by Ginger 5.3.4 on 2024-07-21 18:49

import gingerdj.db.models.deletion
from gingerdj.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="dbschema",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                (
                    "description",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                ("version", models.CharField(max_length=10)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("data", models.TextField(max_length=10000, null=True)),
                ("group_id", models.CharField(max_length=500)),
                ("identifier", models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                "db_table": "dbschema",
            },
        ),
        migrations.CreateModel(
            name="service",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("identifier", models.CharField(max_length=50)),
                ("group_id", models.CharField(max_length=100)),
                (
                    "db_schema_id",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "tables_json",
                    models.CharField(blank=True, max_length=1000, null=True),
                ),
                (
                    "dependencies_json",
                    models.CharField(blank=True, max_length=1000, null=True),
                ),
            ],
            options={
                "db_table": "service",
            },
        ),
        migrations.CreateModel(
            name="templates",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("short_name", models.CharField(max_length=100)),
                ("description", models.TextField(max_length=600)),
                ("repo_link", models.CharField(max_length=100)),
                ("identifier", models.CharField(max_length=40)),
            ],
            options={
                "db_table": "templates",
            },
        ),
        migrations.CreateModel(
            name="dbschema_branch",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("branch_name", models.CharField(max_length=100)),
                ("data", models.TextField(max_length=10000, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("merged", models.BooleanField(default=False)),
                (
                    "parent",
                    models.ForeignKey(
                        on_delete=ginger.db.models.deletion.CASCADE,
                        related_name="definitions",
                        to="src.dbschema",
                    ),
                ),
            ],
            options={
                "db_table": "dbschema_branch",
            },
        ),
        migrations.CreateModel(
            name="service_envs",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("spec", models.TextField(max_length=10000)),
                (
                    "env",
                    models.CharField(
                        choices=[("dev", "dev"), ("stage", "stage"), ("prod", "prod")],
                        max_length=10,
                    ),
                ),
                ("base_url", models.CharField(max_length=100)),
                ("updated_at", models.DateTimeField(auto_now=True, null=True)),
                (
                    "parent",
                    models.ForeignKey(
                        on_delete=ginger.db.models.deletion.CASCADE,
                        related_name="envs",
                        to="src.service",
                    ),
                ),
            ],
            options={
                "db_table": "service_envs",
            },
        ),
    ]
